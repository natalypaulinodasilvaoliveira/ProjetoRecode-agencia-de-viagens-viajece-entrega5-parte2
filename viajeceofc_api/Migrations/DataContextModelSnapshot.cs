// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using viajeceofc_api.Context;

#nullable disable

namespace viajeceofc_api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("viajeceofc_api.Models.Compras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo_Reserva")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<double>("Valor_Total")
                        .HasColumnType("double");

                    b.Property<int>("ViajanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinoId");

                    b.HasIndex("ViajanteId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("viajeceofc_api.Models.Destinos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Data_Entrada")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Data_Saida")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Valor_Compra")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Destinos");
                });

            modelBuilder.Entity("viajeceofc_api.Models.Viajantes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Viajantes");
                });

            modelBuilder.Entity("viajeceofc_api.Models.Compras", b =>
                {
                    b.HasOne("viajeceofc_api.Models.Destinos", "Destino")
                        .WithMany("Compras")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("viajeceofc_api.Models.Viajantes", "Viajante")
                        .WithMany("Compras")
                        .HasForeignKey("ViajanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");

                    b.Navigation("Viajante");
                });

            modelBuilder.Entity("viajeceofc_api.Models.Destinos", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("viajeceofc_api.Models.Viajantes", b =>
                {
                    b.Navigation("Compras");
                });
#pragma warning restore 612, 618
        }
    }
}
